% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{wrapper_scTypeEval}
\alias{wrapper_scTypeEval}
\title{Wrapper Function to Compute Dissimilarities from Single-Cell Data}
\usage{
wrapper_scTypeEval(
  count_matrix,
  metadata,
  ident,
  sample,
  gene.list = NULL,
  reduction = TRUE,
  ndim = 30,
  black.list = NULL,
  normalization.method = "Log1p",
  dissimilarity.method = c("WasserStein", "Pseudobulk:Euclidean", "Pseudobulk:Cosine",
    "Pseudobulk:Pearson", "BestHit:Match", "BestHit:Score"),
  min.samples = 5,
  min.cells = 10,
  ncores = 1,
  bparam = NULL,
  progressbar = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{count_matrix}{A numeric or sparse \code{dgCMatrix} of raw counts
(genes as rows, cells as columns). Seurat and SingleCellExperiment object are accepted too.}

\item{metadata}{A \code{data.frame} containing cell-level metadata.}

\item{ident}{Character string indicating the metadata column specifying
cell identities (e.g., cell types or clusters).}

\item{sample}{Character string specifying the metadata column containing
sample identifiers (used for pseudobulk aggregation).}

\item{gene.list}{Optional named list of gene sets to include in the analysis.
If \code{NULL}, highly variable genes (HVGs) are automatically computed.}

\item{reduction}{Logical; if \code{TRUE}, performs PCA dimensionality
reduction prior to dissimilarity computation (default: \code{TRUE}).}

\item{ndim}{Integer; number of principal components to retain
when \code{reduction = TRUE} (default: \code{30}).}

\item{black.list}{Optional character vector of genes to exclude from analysis.
If \code{NULL}, no genes are blacklisted.}

\item{normalization.method}{Character string specifying the normalization
method to apply. Options include \code{"Log1p"}, \code{"CLR"}, and \code{"pearson"}
(default: \code{"Log1p"}).}

\item{dissimilarity.method}{Character vector of dissimilarity metrics to compute.
Available options include:
\itemize{
\item \code{"WasserStein"}
\item \code{"Pseudobulk:Euclidean"}
\item \code{"Pseudobulk:Cosine"}
\item \code{"Pseudobulk:Pearson"}
\item \code{"BestHit:Match"}
\item \code{"BestHit:Score"}
}
Multiple methods can be provided for comparative evaluation.}

\item{min.samples}{Integer; minimum number of samples required for pseudobulk analysis (default: \code{5}).}

\item{min.cells}{Integer; minimum number of cells required per group for inclusion (default: \code{10}).}

\item{ncores}{Integer; number of CPU cores for parallel execution (default: \code{1}).}

\item{bparam}{Optional \code{BiocParallelParam} object for fine-grained parallelization control.
Overrides \code{ncores} if provided.}

\item{progressbar}{Logical; if \code{TRUE}, displays a progress bar (default: \code{FALSE}).}

\item{verbose}{Logical; if \code{TRUE}, prints progress messages (default: \code{TRUE}).}
}
\value{
An updated \code{scTypeEval} object containing:
\itemize{
\item Normalized and filtered data
\item HVG gene sets or user-provided gene lists
\item PCA reductions (if enabled)
\item Computed dissimilarity matrices for each selected method
}
}
\description{
A high-level convenience function that initializes an \code{scTypeEval} object
from a count matrix and metadata, performs preprocessing (normalization,
filtering, optional dimensionality reduction), defines gene lists,
and computes one or more dissimilarity metrics between cell populations.

This function integrates multiple internal \pkg{scTypeEval} pipeline steps,
including data preparation, HVG selection, PCA reduction, and dissimilarity computation,
providing a streamlined workflow for single-cell data evaluation.
}
\details{
This wrapper combines multiple pipeline steps from \pkg{scTypeEval}:
\enumerate{
\item \code{create.scTypeEval()} — initializes the object.
\item \code{Run.ProcessingData()} — performs normalization and filtering.
\item \code{Run.HVG()} or \code{add.GeneList()} — defines gene sets.
\item \code{Run.PCA()} — performs PCA if \code{reduction = TRUE}.
\item \code{Run.Dissimilarity()} — computes dissimilarities across methods.
}

This provides a simple entry point for end-to-end setup and dissimilarity computation
from raw single-cell data with minimal manual steps.
}
\examples{
\dontrun{
sc_res <- wrapper_scTypeEval(
  count_matrix = sc_counts,
  metadata = sc_metadata,
  ident = "celltype",
  sample = "sample_id",
  normalization.method = "Log1p",
  dissimilarity.method = c("WasserStein", "Pseudobulk:Euclidean"),
  reduction = TRUE,
  ndim = 30,
  verbose = TRUE
)

# Access computed dissimilarities
names(sc_res@dissimilarity)
}

}
\seealso{
\code{\link{create.scTypeEval}},
\code{\link{Run.ProcessingData}},
\code{\link{Run.Dissimilarity}},
\code{\link{Run.PCA}},
\code{\link{Run.HVG}}
}
