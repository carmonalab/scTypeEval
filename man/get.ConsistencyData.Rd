% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{get.ConsistencyData}
\alias{get.ConsistencyData}
\title{Retrieve Consistency Data from scTypeEval Object}
\usage{
get.ConsistencyData(
  scTypeEval,
  gene.list = NULL,
  consistency.metric = NULL,
  distance.method = NULL,
  data.type = NULL
)
}
\arguments{
\item{scTypeEval}{An \code{scTypeEval} object containing consistency analysis results.}

\item{gene.list}{A character vector of gene.lists names to filter the results. Default is \code{NULL} (no filtering by gene.lists).}

\item{consistency.metric}{A character vector specifying which consistency metric(s) to retrieve. Default is \code{NULL} (no filtering by metric).}

\item{distance.method}{A character string specifying the distance method to filter by. Default is \code{NULL} (no filtering by distance method).}

\item{data.type}{A character vector specifying the type of data to filter by. Default is \code{NULL} (no filtering by data type).}
}
\value{
A \code{data.frame} containing the filtered consistency metrics, with columns:
\itemize{
\item \code{celltype}: Cell type names (if applicable, some metrics return global consistency).
\item \code{measure}: Raw consistency metric value.
\item \code{scaled_measure}: Normalized consistency metric value (scaled between 0 and 1).
\item \code{consistency.metric}: The name of the consistency metric used.
\item \code{distance.method}: The distance method used (if applicable).
\item \code{gene.list}: The gene list used in the consistency assessment.
\item \code{ident}: Identifier for cell type annotation.
\item \code{data.type}: Type of data analyzed.
\item \code{sample}: Sample identifier (if available).
}
}
\description{
Extracts and filters consistency metrics from an \code{scTypeEval} object
based on specified criteria.
}
\details{
This function retrieves consistency assessment results stored in the \code{scTypeEval} object and stored in \code{consistency} slot.
It allows filtering based on gene lists, consistency metrics, distance methods, and data types.
The extracted data includes both raw and scaled consistency measurements.
}
\examples{
# Obtain all results
result <- get.ConsistencyData(scTypeEval = sceval) # scTypeEval object previously run for consistency metrics

# filtered results
result_filtered <- get.ConsistencyData(scTypeEval = sceval, # scTypeEval object previously run for consistency metrics
                                       gene.list = c("HVG"), # get only the highly variable gene restuls
                                       consistency.metric = c("silhouette", "modularity"), # get only silhouette and modularity results
                                       distance.method = "euclidean", # get only results for euclidean distance
                                       data.type = "pseudobulk") # get only pseudobulk results


}
