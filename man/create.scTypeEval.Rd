% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{create.scTypeEval}
\alias{create.scTypeEval}
\title{Create an scTypeEval object for evaluating cell type classification.}
\usage{
create.scTypeEval(
  matrix,
  metadata = NULL,
  gene.lists = list(),
  black.list = character(),
  active.ident = NULL,
  version = "1.0.0"
)
}
\arguments{
\item{matrix}{A Seurat object, SingleCellExperiment object, or a count matrix (dense or sparse).}

\item{metadata}{A metadata dataframe (required if \code{matrix} is a raw matrix).
It must have the same number of rows as columns in the count matrix, sharing rownames and colnames respectively.}

\item{gene.lists}{A named list of gene sets to use in the evaluation.}

\item{black.list}{A character vector of genes to exclude from analysis.}

\item{active.ident}{The active identity class or cluster label (optional).}

\item{version}{A string indicating the version of the \code{scTypeEval} object (optional).}
}
\value{
An \code{scTypeEval} object containing:
\itemize{
\item \code{counts}: A sparse count matrix (dgCMatrix).
\item \code{metadata}: A dataframe with metadata for each cell.
\item \code{gene.lists}: A list of gene sets used in classification.
\item \code{black.list}: A vector of excluded genes.
\item \code{active.ident}: Active cluster identity (if provided).
\item \code{version}: The version tag for the object.
}
}
\description{
This function initializes an \code{scTypeEval} object from various input formats, including Seurat,
SingleCellExperiment, or raw count matrices. It ensures compatibility by validating input types
and structures before constructing the object.
}
\details{
The function converts input objects into a standardized format before constructing
an \code{scTypeEval} object. It ensures that the count matrix and metadata are correctly
aligned and validates input types before proceeding.
}
\examples{
\dontrun{
# From count matrix and metadata dataframe
sceval <- create.scTypeEval(matrix = count_matrix, metadata = metadata)

# From Seurat object
sceval <- create.scTypeEval(seurat_obj)
}

}
